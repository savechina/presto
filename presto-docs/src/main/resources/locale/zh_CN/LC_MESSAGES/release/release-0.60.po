# 
msgid ""
msgstr ""
"Project-Id-Version: Presto 0.94-SNAPSHOT\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-09 22:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/main/sphinx/release/release-0.60.rst:3
msgid "Release 0.60"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:6
msgid "JDBC improvements"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:8
msgid ""
"The Presto version of the JDBC ``DatabaseMetaData`` interface now includes "
"proper implementations of ``getTables``, ``getSchemas`` and ``getCatalogs``."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:11
msgid ""
"The JDBC driver is now always packaged as a standalone jar without any "
"dependencies.  Previously, this artifact was published with the Maven "
"classifier ``standalone``. The new build does not publish this artifact "
"anymore."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:17
msgid "USE CATALOG and USE SCHEMA"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:19
msgid ""
"The :doc:`/installation/cli` now supports ``USE CATALOG`` and ``USE "
"SCHEMA``."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:24
msgid "TPCH Connector"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:26
msgid ""
"We have added a new connector that will generate synthetic data following "
"the TPC-H specification. This connector makes it easy to generate large "
"datasets for testing and bug reports. When generating bug reports, we "
"encourage users to use this catalog since it eases the process of "
"reproducing the issue. The data is generated dynamically for each query, so "
"no disk space is used by this connector. To add the ``tpch`` catalog to your"
" system, create the catalog property file ``etc/catalog/tpch.properties`` on"
" both the coordinator and workers with the following contents:"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:39
msgid ""
"Additionally, update the ``datasources`` property in the config properties "
"file, ``etc/config.properties``, for the workers to include ``tpch``."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:43
msgid "SPI changes"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:45
msgid ""
"The ``Connector`` interface now has explicit methods for supplying the "
"services expected by the query engine. Previously, this was handled by a "
"generic ``getService`` method."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:50
msgid ""
"This is a backwards incompatible change to ``Connector`` in the SPI, so if "
"you have written a connector, you will need to update your code before "
"deploying this release."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:54
msgid ""
"Additionally, we have added the ``NodeManager`` interface to the SPI to "
"allow a plugin to detect all nodes in the Presto cluster.  This is important"
" for some connectors that can divide a table evenly between all nodes as "
"long as the connector knows how many nodes exist.  To access the node "
"manager, simply add the following to the ``Plugin`` class:"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:69
msgid "Optimizations"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:72
msgid "DISTINCT LIMIT"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:74
msgid "For queries with the following form::"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:80
msgid ""
"We have added an optimization that stops the query as soon as ``N`` distinct"
" rows are found."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:84
msgid "Range predicates"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:86
msgid ""
"When optimizing a join, Presto analyzes the ranges of the partitions on each"
" side of a join and pushes these ranges to the other side.  When tables have"
" a lot of partitions, this can result in a very large filter with one "
"expression for each partition.  The optimizer now summarizes the predicate "
"ranges to reduce the complexity of the filters."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:93
msgid "Compound filters"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:95
msgid ""
"Complex expressions involving ``AND``, ``OR``, or ``NOT`` are now optimized "
"by the expression optimizer."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:99
msgid "Window functions"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:101
msgid ""
"Window functions with a ``PARTITION BY`` clause are now distributed based on"
" the partition key."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:105
msgid "Bug fixes"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:107
msgid "Scheduling"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:109
msgid ""
"In the changes to schedule splits in batches, we introduced two bugs that "
"resulted in an unbalanced workload across nodes which increases query "
"latency. The first problem was not inspecting the queued split count of the "
"nodes while scheduling the batch, and the second problem was not counting "
"the splits awaiting creation in the task executor."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:115
msgid "JSON conversion of complex Hive types"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:117
msgid ""
"Presto converts complex Hive types (array, map, struct and union) into JSON."
" Previously, numeric keys in maps were converted to numbers, not strings, "
"which is invalid as JSON only allows strings for object keys. This prevented"
" the :doc:`/functions/json` from working."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:122
msgid "Hive hidden files"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:124
msgid ""
"Presto will now ignore files in Hive that start with an underscore ``_`` or "
"a dot ``.``.  This matches the behavior of Hadoop MapReduce / Hive."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:127
msgid "Failures incorrectly reported as no data"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:129
msgid ""
"Certain types of failures would result in the query appearing to succeed and"
" return an incomplete result (often zero rows). There was a race condition "
"between the error propagation and query teardown. In some cases, the query "
"would be torn down before the exception made it to the coordinator. This was"
" a regression introduced during the query teardown optimization work. There "
"are now tests to catch this type of bug."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:136
msgid "Exchange client leak"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:138
msgid ""
"When a query finished early (e.g., limit or failure) and the exchange "
"operator was blocked waiting for data from other nodes, the exchange was not"
" be closed properly. This resulted in continuous failing HTTP requests which"
" leaked resources and produced large log files."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:143
msgid "Hash partitioning"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:145
msgid ""
"A query with many ``GROUP BY`` items could fail due to an overflow in the "
"hash function."
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:148
msgid "Compiled NULL literal"
msgstr ""

#: ../../src/main/sphinx/release/release-0.60.rst:150
msgid ""
"In some cases queries with a select expression like ``CAST(NULL AS "
"varchar)`` would fail due to a bug in the output type detection code in "
"expression compiler."
msgstr ""
